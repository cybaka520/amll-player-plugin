name: 发布插件

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: write

jobs:
  publish:
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'plugin/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 读取 PR 信息
        id: meta
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.pull_request.body;
            const get = (label) => {
              const m = body.match(new RegExp(`^\\\\*\\\\*${label}：\\\\*\\\\*\\\\s*(.+)\\\\s*$`, 'm'));
              return m ? m[1].trim() : '';
            };
            core.setOutput('NAME',   get('插件名'));
            core.setOutput('AUTHOR', get('作者'));
            core.setOutput('VERSION',get('版本号'));
            core.setOutput('DESC',   get('简介'));
            const filename = context.payload.pull_request.title.replace(/^Add plugin /, '');
            core.setOutput('FILENAME', filename);

      - name: 复制插件到发布目录
        run: |
          SRC="raw-plugin/${{ steps.meta.outputs.FILENAME }}"
          DST="amll-plugin/${{ steps.meta.outputs.NAME }}-${{ steps.meta.outputs.AUTHOR }}.js"
          mkdir -p amll-plugin
          test -f "$SRC" || { echo "源文件 $SRC 不存在"; exit 1; }
          cp "$SRC" "$DST"

      - name: 生成索引
        run: |
          INDEX="amll-plugin/index.jsonl"
          jq -n \
            --arg fn  "${{ steps.meta.outputs.NAME }}-${{ steps.meta.outputs.AUTHOR }}.js" \
            --arg name "${{ steps.meta.outputs.NAME }}" \
            --arg desc "${{ steps.meta.outputs.DESC }}" \
            --arg author "${{ steps.meta.outputs.AUTHOR }}" \
            --arg ver  "${{ steps.meta.outputs.VERSION }}" \
            '{filename:$fn, plugin:$name, description:$desc, author:$author, version:$ver, publishedAt: now | todate}' \
          >> "$INDEX"

      - name: 提交并推送
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add amll-plugin
          git diff --cached --quiet && exit 0
          git commit -m "Publish ${{ steps.meta.outputs.NAME }} v${{ steps.meta.outputs.VERSION }}"
          git push
