name: 创建插件pr

on:
  issues:
    types: [opened]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  handle:
    if: contains(github.event.issue.labels.*.name, '插件上传/更新')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 安装工具
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y jq curl

      - name: 解析issue
        id: meta
        run: |
          body='${{ github.event.issue.body }}'
          echo "$body" | grep -E '^### 插件名'  -A1 | tail -1 | sed 's/^/NAME=/' >> $GITHUB_OUTPUT
          echo "$body" | grep -E '^### 插件简介' -A1 | tail -1 | sed 's/^/DESC=/' >> $GITHUB_OUTPUT
          echo "$body" | grep -E '^### 插件作者' -A1 | tail -1 | sed 's/^/AUTHOR=/' >> $GITHUB_OUTPUT
          echo "$body" | grep -E '^### 插件下载直链' -A1 | tail -1 | sed 's/^/URL=/' >> $GITHUB_OUTPUT

      - name: 下载插件
        id: dl
        continue-on-error: true
        run: |
          mkdir -p tmp
          if curl --fail-with-body -fsSL '${{ steps.meta.outputs.URL }}' -o tmp/plugin.js; then
            TS=$(date +%s)
            RAND=$(openssl rand -hex 4)
            FILENAME="${TS}-${{ github.event.issue.user.login }}-${RAND}.js"
            mv tmp/plugin.js "raw-lyrics/$FILENAME"
            echo "success=true"  >> $GITHUB_OUTPUT
            echo "FILENAME=$FILENAME" >> $GITHUB_OUTPUT
          else
            echo "success=false" >> $GITHUB_OUTPUT
          fi

      - name: 下载失败处理
        if: steps.dl.outputs.success != 'true'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `@${{ github.event.issue.user.login }} 插件下载失败，请检查直链是否有效。`
            });
            await github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed'
            });
            core.setFailed('插件下载失败');

      - name: 追加元数据
        if: steps.dl.outputs.success == 'true'
        run: |
          ENTRY=$(jq -n \
            --arg fn "${{ steps.dl.outputs.FILENAME }}" \
            --arg name "${{ steps.meta.outputs.NAME }}" \
            --arg author "${{ steps.meta.outputs.AUTHOR }}" \
            --arg desc "${{ steps.meta.outputs.DESC }}" \
            --arg issue "${{ github.event.issue.number }}" \
            '{filename:$fn, plugin:$name, author:$author, description:$desc, issue:$issue, mergedAt: now | todate}')
          echo "$ENTRY" >> metadata/raw-plugin-index.jsonl

      - name: 创建并推送分支
        if: steps.dl.outputs.success == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b "plugin/${{ steps.meta.outputs.NAME }}-${{ github.run_id }}"
          git add raw-lyrics/${{ steps.dl.outputs.FILENAME }} metadata/raw-plugin-index.jsonl
          git commit -m "Add plugin ${{ steps.meta.outputs.NAME }} from #${{ github.event.issue.number }}"
          git push origin "plugin/${{ steps.meta.outputs.NAME }}-${{ github.run_id }}"

      - name: 创建 PR
        if: steps.dl.outputs.success == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: "plugin/${{ steps.meta.outputs.NAME }}-${{ github.run_id }}"
          title: "${{ steps.meta.outputs.NAME }}"
          body: |
            **插件名：** ${{ steps.meta.outputs.NAME }}  
            **作者：** @${{ steps.meta.outputs.AUTHOR }}  
            **简介：** ${{ steps.meta.outputs.DESC }}  

            来源 Issue：#${{ github.event.issue.number }}
          base: main

      - name: 关闭 Issue
        if: steps.dl.outputs.success == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `已创建 PR：${{ steps.cpr.outputs.pull-request-url }} ，请等待审核。`
            });
            await github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed'
            });
